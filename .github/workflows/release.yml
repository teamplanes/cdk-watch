name: release
on:
  push:
    branches: [main, next]
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # gives standard-version access to all previous commits
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: yarn install
        run: yarn install --frozen-lockfile

      - name: configure git
        run: |
          git config user.name ${GITHUB_ACTOR}
          git config user.email hello@planes.studio
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}

      # Only run on next branch
      - name: generate tag and release body (next)
        if: github.ref == 'refs/heads/next'
        run: |
          yarn standard-version -i RELEASE_BODY.md --skip.commit --prerelease next
          npm publish --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Only run on main branch
      - name: generate tag and release body (latest)
        if: github.ref == 'refs/heads/main'
        run: |
          yarn standard-version -i RELEASE_BODY.md --skip.commit
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: publish tag
        id: publish_tag
        run: |
          git add package.json
          git commit -m "chore: release" -n
          git push --follow-tags
          echo ::set-output name=tag_name::$(git describe HEAD --abbrev=0)

      - name: create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ steps.publish_tag.outputs.tag_name }}
          tag_name: ${{ steps.publish_tag.outputs.tag_name }}
          body_path: RELEASE_BODY.md
